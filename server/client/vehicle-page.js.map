{"version":3,"sources":["webpack:///./pages/vehicle-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_react","__webpack_require__","_relaks","_list","VehiclePage","meanwhile","this","props","route","swapi","show","_react2","default","createElement","VehiclePageSync","fetchOne","params","id","vehicle","fetchMultiple","films","minimum","pilots","AsyncComponent","displayName","_props2","name","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passenger","cargo_capacity","consumables","vehicle_class","List","urls","items","pageName","field","_loading2","PureComponent","map","url","index","item","pending","className","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"kQAAAA,EAAAC,EAAA,WACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,SACAA,EAAA,6DAEMG,6PAUgBC,8FACSC,KAAKC,MAAtBC,UAAOC,UACTF,EAAQ,CACRC,SAEJH,EAAUK,KAAKC,EAAAC,QAAAC,cAACC,EAAoBP,aACdE,EAAMM,SAAN,aAA4BP,EAAMQ,OAAOC,GAAzC,mBAAtBV,EAAMW,eACNb,EAAUK,KAAKC,EAAAC,QAAAC,cAACC,EAAoBP,aAChBE,EAAMU,cAAcZ,EAAMW,QAAQE,MAAO,CAAEC,QAAS,sBAAxEd,EAAMa,aACNf,EAAUK,KAAKC,EAAAC,QAAAC,cAACC,EAAoBP,cACfE,EAAMU,cAAcZ,EAAMW,QAAQI,OAAQ,CAAED,QAAS,uBAA1Ed,EAAMe,cACNjB,EAAUK,KAAKC,EAAAC,QAAAC,cAACC,EAAoBP,sBAC7BI,EAAAC,QAAAC,cAACC,EAAoBP,+GAtBVgB,kBAApBnB,EACKoB,YAAc,kBAyBnBV,0MAQO,IAAAW,EACmCnB,KAAKC,MAAvCC,EADDiB,EACCjB,MAAOU,EADRO,EACQP,QAASI,EADjBG,EACiBH,OAAQF,EADzBK,EACyBL,MAC9B,OAAKF,EAIDP,EAAAC,QAAAC,cAAA,WACIF,EAAAC,QAAAC,cAAA,UAAKK,EAAQQ,MACbf,EAAAC,QAAAC,cAAA,qBAAaK,EAAQS,OACrBhB,EAAAC,QAAAC,cAAA,4BAAoBK,EAAQU,cAC5BjB,EAAAC,QAAAC,cAAA,+BAAuBK,EAAQW,iBAC/BlB,EAAAC,QAAAC,cAAA,sBAAcK,EAAQY,OAAtB,MACAnB,EAAAC,QAAAC,cAAA,sCAA8BK,EAAQa,uBAAtC,SACApB,EAAAC,QAAAC,cAAA,oBAAYK,EAAQc,MACpBrB,EAAAC,QAAAC,cAAA,0BAAkBK,EAAQe,WAC1BtB,EAAAC,QAAAC,cAAA,8BAAsBK,EAAQgB,eAA9B,OACAvB,EAAAC,QAAAC,cAAA,2BAAmBK,EAAQiB,aAC3BxB,EAAAC,QAAAC,cAAA,6BAAqBK,EAAQkB,eAC7BzB,EAAAC,QAAAC,cAAA,oBACAF,EAAAC,QAAAC,cAACV,EAAAkC,KAAD,CAAMC,KAAMpB,EAAQI,OAAQiB,MAAOjB,EAAQkB,SAAS,oBAAoBhC,MAAOA,IAC/EG,EAAAC,QAAAC,cAAA,mBACAF,EAAAC,QAAAC,cAACV,EAAAkC,KAAD,CAAMC,KAAMpB,EAAQE,MAAOmB,MAAOnB,EAAOqB,MAAM,QAAQD,SAAS,eAAehC,MAAOA,KAlBnFG,EAAAC,QAAAC,cAAC6B,EAAA9B,QAAD,aAXW+B,iBAAxB7B,EACKU,YAAc,oBAmCNZ,QAAfR,IACAA,gBACAU,6HCrEJ,MAAAd,EAAAC,EAAA,wCAEA,SAASoC,EAAK9B,GAAO,IACXC,EAAwCD,EAAxCC,MAAO8B,EAAiC/B,EAAjC+B,KAAMC,EAA2BhC,EAA3BgC,MAAOE,EAAoBlC,EAApBkC,MAAOD,EAAajC,EAAbiC,SAgBjC,OAfIF,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTC,EAAQ,CAAEA,IAGdA,EAAQD,EAAKM,IAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQR,EAASA,EAAMO,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,KAGVR,EAGgB,IAAjBA,EAAMT,OACCnB,EAAAC,QAAAC,cAAA,MAAIoC,UAAU,SAAQtC,EAAAC,QAAAC,cAAA,UAAIF,EAAAC,QAAAC,cAAA,sBAGjCF,EAAAC,QAAAC,cAAA,UAEI0B,EAAMK,IAAI,SAACG,GACP,IAAI9B,EAAKT,EAAM0C,UAAUH,EAAKF,KAC1BA,EAAMrC,EAAM2C,KAAKX,EAAU,CAAEvB,OAC7BmC,EAAOL,EAAKC,QAAU,MAAQD,EAAKN,GACnCY,EAAY,CACZC,KAAMT,EACNI,UAAYF,EAAKC,QAAW,eAAYO,GAE5C,OAAO5C,EAAAC,QAAAC,cAAA,MAAI2C,IAAKvC,GAAIN,EAAAC,QAAAC,cAAA,IAAOwC,EAAYD,OAhBxC,KAuBff,EAAKoB,aAAe,CAChBhB,MAAO,QAGXJ,EAAKb,YAAc,SAGPZ,QAARyB,IACAA,qHCnDJ,MAAArC,EAAAC,EAAA,wCAEA,SAASyD,IACL,OACI/C,EAAAC,QAAAC,cAAA,OAAKoC,UAAU,WACXtC,EAAAC,QAAAC,cAAA,WACIF,EAAAC,QAAAC,cAAA,KAAGoC,UAAU,0BADjB,aAOZS,EAAQlC,YAAc,YAGPZ,QAAX8C,IACAA","file":"vehicle-page.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { AsyncComponent } from 'relaks';\nimport { List } from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nclass VehiclePage extends AsyncComponent {\n    static displayName = 'VehiclePage';\n\n    /**\n     * Retrieve remote data and render the synchronize half of this component\n     *\n     * @param  {Meanwhile}  meanwhile\n     *\n     * @return {VNode}\n     */\n    async renderAsync(meanwhile) {\n        let { route, swapi } = this.props;\n        let props = {\n            route,\n        };\n        meanwhile.show(<VehiclePageSync {...props} />);\n        props.vehicle = await swapi.fetchOne(`/vehicles/${route.params.id}/`);\n        meanwhile.show(<VehiclePageSync {...props} />);\n        props.films = await swapi.fetchMultiple(props.vehicle.films, { minimum: '60%' });\n        meanwhile.show(<VehiclePageSync {...props} />);\n        props.pilots = await swapi.fetchMultiple(props.vehicle.pilots, { minimum: '60%' });\n        meanwhile.show(<VehiclePageSync {...props} />);\n        return <VehiclePageSync {...props} />;\n    }\n}\n\nclass VehiclePageSync extends PureComponent {\n    static displayName = 'VehiclePageSync';\n\n    /**\n     * Render the component, making best effort using what props are given\n     *\n     * @return {VNode}\n     */\n    render() {\n        let { route, vehicle, pilots, films } = this.props;\n        if (!vehicle) {\n            return <Loading />;\n        }\n        return (\n            <div>\n                <h1>{vehicle.name}</h1>\n                <div>Model: {vehicle.model}</div>\n                <div>Manufacturer: {vehicle.manufacturer}</div>\n                <div>Cost in credits: {vehicle.cost_in_credits}</div>\n                <div>Length: {vehicle.length} m</div>\n                <div>Max atmosphering speed: {vehicle.max_atmosphering_speed} km/h</div>\n                <div>Crew: {vehicle.crew}</div>\n                <div>Passengers: {vehicle.passenger}</div>\n                <div>Cargo capacity: {vehicle.cargo_capacity} kg</div>\n                <div>Consumables: {vehicle.consumables}</div>\n                <div>Vehicle class: {vehicle.vehicle_class}</div>\n                <h2>Pilots</h2>\n                <List urls={vehicle.pilots} items={pilots} pageName=\"character-summary\" route={route} />\n                <h2>Films</h2>\n                <List urls={vehicle.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n            </div>\n        );\n    }\n}\n\nexport {\n    VehiclePage as default,\n    VehiclePage,\n    VehiclePageSync,\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            var item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return (\n        <ul>\n        {\n            items.map((item) => {\n                let id = route.extractID(item.url);\n                let url = route.find(pageName, { id });\n                let text = item.pending ? '...' : item[field];\n                let linkProps = {\n                    href: url,\n                    className: (item.pending) ? 'pending' : undefined,\n                };\n                return <li key={id}><a {...linkProps}>{text}</a></li>;\n            })\n        }\n        </ul>\n    );\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nList.displayName = 'List';\n\nexport {\n    List as default,\n    List\n};\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nLoading.displayName = 'Loading';\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}