{"version":3,"sources":["webpack:///./pages/character-page.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_react","__webpack_require__","_relaks","_list","CharacterPage","meanwhile","this","props","route","swapi","show","_react2","default","createElement","CharacterPageSync","fetchOne","params","id","person","fetchMultiple","films","minimum","species","homeworld","vehicles","starships","AsyncComponent","displayName","_props2","className","name","height","mass","hair_color","skin_color","eye_color","birth_year","List","urls","items","pageName","field","_loading2","PureComponent","map","url","index","item","pending","length","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"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","file":"character-page.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { AsyncComponent } from 'relaks';\nimport { List } from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nclass CharacterPage extends AsyncComponent {\n    static displayName = 'CharacterPage';\n\n    /**\n     * Retrieve remote data and render the synchronize half of this component\n     *\n     * @param  {Meanwhile}  meanwhile\n     *\n     * @return {VNode}\n     */\n    async renderAsync(meanwhile) {\n        let { route, swapi } = this.props;\n        let props = {\n            route,\n        };\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.person = await swapi.fetchOne(`/people/${route.params.id}/`);\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.films = await swapi.fetchMultiple(props.person.films, { minimum: '60%' });\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.species = await swapi.fetchMultiple(props.person.species, { minimum: '60%' });\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.homeworld = await swapi.fetchOne(props.person.homeworld);\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.vehicles = await swapi.fetchMultiple(props.person.vehicles, { minimum: '60%' });\n        meanwhile.show(<CharacterPageSync {...props} />);\n        props.starships = await swapi.fetchMultiple(props.person.starships, { minimum: '60%' });\n        meanwhile.show(<CharacterPageSync {...props} />);\n        return <CharacterPageSync {...props} />;\n    }\n}\n\nclass CharacterPageSync extends PureComponent {\n    static displayName = 'CharacterPageSync';\n\n    /**\n     * Render the component, making best effort using what props are given\n     *\n     * @return {VNode}\n     */\n    render() {\n        let { route, person, homeworld, films, species, vehicles, starships } = this.props;\n        if (!person) {\n            return <Loading />;\n        }\n        return (\n            <div className=\"character-page\">\n                <h1>{person.name}</h1>\n                <div>Height: {person.height} cm</div>\n                <div>Mass: {person.mass} kg</div>\n                <div>Hair color: {person.hair_color}</div>\n                <div>Skin color: {person.skin_color}</div>\n                <div>Hair color: {person.hair_color}</div>\n                <div>Eye color: {person.eye_color}</div>\n                <div>Birth year: {person.birth_year}</div>\n                <h2>Homeworld</h2>\n                <List urls={person.homeworld} items={homeworld} pageName=\"planet-summary\" route={route} />\n                <h2>Films</h2>\n                <List urls={person.films} items={films} field=\"title\" pageName=\"film-summary\" route={route} />\n                <h2>Species</h2>\n                <List urls={person.species} items={species} pageName=\"species-summary\" route={route} />\n                <h2>Vehicles</h2>\n                <List urls={person.vehicles} items={vehicles} pageName=\"vehicle-summary\" route={route} />\n                <h2>Starships</h2>\n                <List urls={person.starships} items={starships} pageName=\"starship-summary\" route={route} />\n            </div>\n        );\n    }\n}\n\nexport {\n    CharacterPage as default,\n    CharacterPage,\n    CharacterPageSync,\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            var item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return (\n        <ul>\n        {\n            items.map((item) => {\n                let id = route.extractID(item.url);\n                let url = route.find(pageName, { id });\n                let text = item.pending ? '...' : item[field];\n                let linkProps = {\n                    href: url,\n                    className: (item.pending) ? 'pending' : undefined,\n                };\n                return <li key={id}><a {...linkProps}>{text}</a></li>;\n            })\n        }\n        </ul>\n    );\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nList.displayName = 'List';\n\nexport {\n    List as default,\n    List\n};\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nLoading.displayName = 'Loading';\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}