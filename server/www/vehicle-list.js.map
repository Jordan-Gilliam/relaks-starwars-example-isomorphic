{"version":3,"sources":["webpack:///./pages/vehicle-list.jsx","webpack:///./widgets/list.jsx","webpack:///./widgets/loading.jsx"],"names":["_react","__webpack_require__","_relaks","VehicleList","meanwhile","this","props","route","swapi","show","_react2","default","createElement","VehicleListSync","fetchList","vehicles","more","AsyncComponent","displayName","_props2","_loading2","listProps","items","pageName","_list2","PureComponent","List","urls","field","map","url","index","item","pending","length","className","id","extractID","find","text","linkProps","href","undefined","key","defaultProps","Loading"],"mappings":"0RAAAA,EAAAC,EAAA,WACAC,EAAAD,EAAA,QACAA,EAAA,UACAA,EAAA,6DAEME,6PAUgBC,8FACSC,KAAKC,MAAtBC,UAAOC,UACTF,EAAQ,CACRC,SAEJH,EAAUK,KAAKC,EAAAC,QAAAC,cAACC,EAAoBP,aACbE,EAAMM,UAAU,4BAAvCR,EAAMS,gBACNT,EAAMS,SAASC,yBACRN,EAAAC,QAAAC,cAACC,EAAoBP,8GAlBVW,kBAApBd,EACKe,YAAc,kBAqBnBL,0MAQO,IAAAM,EACqBd,KAAKC,MAAzBS,EADDI,EACCJ,SAAUR,EADXY,EACWZ,MAChB,IAAKQ,EACD,OAAOL,EAAAC,QAAAC,cAACQ,EAAAT,QAAD,MAEX,IAAIU,EAAY,CACZC,MAAOP,EACPQ,SAAU,kBACVhB,SAEJ,OACIG,EAAAC,QAAAC,cAAA,WACIF,EAAAC,QAAAC,cAAA,sBACAF,EAAAC,QAAAC,cAACY,EAAAb,QAASU,WArBII,iBAAxBZ,EACKK,YAAc,oBA2BNP,QAAfR,IACAA,gBACAU,6HCzDJ,MAAAb,EAAAC,EAAA,wCAEA,SAASyB,EAAKpB,GAAO,IACXC,EAAwCD,EAAxCC,MAAOoB,EAAiCrB,EAAjCqB,KAAML,EAA2BhB,EAA3BgB,MAAOM,EAAoBtB,EAApBsB,MAAOL,EAAajB,EAAbiB,SAgBjC,OAfII,IAEqB,iBAAVA,IACPA,EAAO,CAAEA,GACTL,EAAQ,CAAEA,IAGdA,EAAQK,EAAKE,IAAI,SAACC,EAAKC,GACnB,IAAIC,EAAQV,EAASA,EAAMS,GAAS,KAIpC,OAHKC,IACDA,EAAO,CAAEF,MAAKG,SAAS,IAEpBD,KAGVV,EAGgB,IAAjBA,EAAMY,OACCxB,EAAAC,QAAAC,cAAA,MAAIuB,UAAU,SAAQzB,EAAAC,QAAAC,cAAA,UAAIF,EAAAC,QAAAC,cAAA,sBAGjCF,EAAAC,QAAAC,cAAA,UAEIU,EAAMO,IAAI,SAACG,GACP,IAAII,EAAK7B,EAAM8B,UAAUL,EAAKF,KAC1BA,EAAMvB,EAAM+B,KAAKf,EAAU,CAAEa,OAC7BG,EAAOP,EAAKC,QAAU,MAAQD,EAAKJ,GACnCY,EAAY,CACZC,KAAMX,EACNK,UAAYH,EAAKC,QAAW,eAAYS,GAE5C,OAAOhC,EAAAC,QAAAC,cAAA,MAAI+B,IAAKP,GAAI1B,EAAAC,QAAAC,cAAA,IAAO4B,EAAYD,OAhBxC,KAuBfb,EAAKkB,aAAe,CAChBhB,MAAO,QAGXF,EAAKR,YAAc,SAGPP,QAARe,IACAA,qHCnDJ,MAAA1B,EAAAC,EAAA,wCAEA,SAAS4C,IACL,OACInC,EAAAC,QAAAC,cAAA,OAAKuB,UAAU,WACXzB,EAAAC,QAAAC,cAAA,WACIF,EAAAC,QAAAC,cAAA,KAAGuB,UAAU,0BADjB,aAOZU,EAAQ3B,YAAc,YAGPP,QAAXkC,IACAA","file":"vehicle-list.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { AsyncComponent } from 'relaks';\nimport List from 'widgets/list';\nimport Loading from 'widgets/loading';\n\nclass VehicleList extends AsyncComponent {\n    static displayName = 'VehicleList';\n\n    /**\n     * Retrieve remote data and render the synchronize half of this component\n     *\n     * @param  {Meanwhile}  meanwhile\n     *\n     * @return {VNode}\n     */\n    async renderAsync(meanwhile) {\n        let { route, swapi } = this.props;\n        let props = {\n            route,\n        };\n        meanwhile.show(<VehicleListSync {...props} />);\n        props.vehicles = await swapi.fetchList('/vehicles/');\n        props.vehicles.more();\n        return <VehicleListSync {...props} />;\n    }\n}\n\nclass VehicleListSync extends PureComponent {\n    static displayName = 'VehicleListSync';\n\n    /**\n     * Render the component, making best effort using what props are given\n     *\n     * @return {VNode}\n     */\n    render() {\n        let { vehicles, route } = this.props;\n        if (!vehicles) {\n            return <Loading />;\n        }\n        let listProps = {\n            items: vehicles,\n            pageName: 'vehicle-summary',\n            route,\n        };\n        return (\n            <div>\n                <h1>Vehicles</h1>\n                <List {...listProps} />\n            </div>\n        );\n    }\n}\n\nexport {\n    VehicleList as default,\n    VehicleList,\n    VehicleListSync\n};\n","import React from 'react';\n\nfunction List(props) {\n    let { route, urls, items, field, pageName } = props;\n    if (urls) {\n        // accept single URL and object\n        if (typeof(urls) === 'string') {\n            urls = [ urls ];\n            items = [ items ];\n        }\n        // deal with holes in the data set\n        items = urls.map((url, index) => {\n            var item = (items) ? items[index] : null;\n            if (!item) {\n                item = { url, pending: true };\n            }\n            return item;\n        });\n    }\n    if (!items) {\n        return null;\n    }\n    if (items.length === 0) {\n        return <ul className=\"empty\"><li><span>none</span></li></ul>;\n    }\n    return (\n        <ul>\n        {\n            items.map((item) => {\n                let id = route.extractID(item.url);\n                let url = route.find(pageName, { id });\n                let text = item.pending ? '...' : item[field];\n                let linkProps = {\n                    href: url,\n                    className: (item.pending) ? 'pending' : undefined,\n                };\n                return <li key={id}><a {...linkProps}>{text}</a></li>;\n            })\n        }\n        </ul>\n    );\n}\n\nList.defaultProps = {\n    field: 'name'\n};\n\nList.displayName = 'List';\n\nexport {\n    List as default,\n    List\n};\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div>\n                <i className=\"fab fa-empire fa-spin\"/> Loading\n            </div>\n        </div>\n    );\n}\n\nLoading.displayName = 'Loading';\n\nexport {\n    Loading as default,\n    Loading\n};\n"],"sourceRoot":""}